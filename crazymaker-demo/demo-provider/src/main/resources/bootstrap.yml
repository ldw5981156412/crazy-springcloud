server:
  port: 7700
  servlet:
      context-path: /demo-provider
    tomcat:
    uri-encoding: UTF-8
    max-threads: 200
    accept-count: 1000
    max-connections: 5000
    min-spare-threads: 20

management:
  endpoints:
    # 暴露 EndPoint 以供访问，有jmx和web两种方式，exclude 的优先级高于 include
    jmx:
      exposure:
        exclude: '*'
        include: '*'
    web:
      exposure:
      # exclude: '*'
        include: ["health","info","beans","mappings","logfile","metrics","shutdown","env"]
      base-path: /actuator  # 配置 Endpoint 的基础路径
      cors: # 配置跨域资源共享
        allowed-origins: http://crazydemo.com,http://zuul.server,http://nginx.server
        allowed-methods: GET,POST
    enabled-by-default: true # 修改全局 endpoint 默认设置

eureka:
  instance:
    instance-id: ${spring.cloud.client.ip-address}:${server.port}
    ip-address: ${spring.cloud.client.ip-address}
    prefer-ip-address: true  #访问路径可以显示IP地址
    status-page-url-path: /${management.endpoints.web.base-path}/info #定义实例信息的页面地址
    health-check-url-path: /${management.endpoints.web.base-path}/health #定义健康检查的页面地
  client:
    register-with-eureka: true #注册到eureka服务器
    fetch-registry: true  #要不要去注册中心获取其他服务
    serviceUrl:
      defaultZone: ${SCAFFOLD_EUREKA_ZONE_HOSTS:http://localhost:7777/eureka/}

spring:
  cloud:
    config:
      label:  ${SCAFFOLD_LABEL:dev} #对应的是配置文件规则中的{label}部分
      name: crazymaker #对应的是配置文件规则中的{application}部分
      profile: common,db,redis #对应的是配置文件规则中的{profile}部分，可以是多个，用逗号隔开。
      discovery:
        enabled: true #开启配置服务的自动发现机制
        service-id: config-server
    inetutils:
      timeout-seconds: 10
      preferred-networks: ${SCAFFOLD_PREFERRED_NETWORKS:192.168.}
      prefer-ip-address: true #访问路径可以显示IP地址
  main:
    allow-bean-definition-overriding: true

feign:
  httpclient:
      enabled: true
      max-connections: 1000 # 默认值 200
      max-connections-per-route: 250 # 默认值   50
  client:
    config:
      default:
         connectTimeout: 50000  #连接超时时间
         readTimeout: 50000  #读取超时时间
ribbon:
  eager-load:
    enabled: true # 开启Ribbon的饥饿加载模式，启动时创建 RibbonClient
  MaxAutoRetries: 1 # 同一台实例的最大重试次数，但是不包括首次调用，默认为1次
  MaxAutoRetriesNextServer: 2  # 重试负载均衡其他实例的最大重试次数，不包括首次调用，默认为0次
  OkToRetryOnAllOperations: true  # 是否对所有操作都重试，默认false
  ServerListRefreshInterval: 2000 # 从注册中心刷新服务器列表信息的时间间隔，默认为2000毫秒，即2秒
  retryableStatusCodes: 400,401,403,404,500,502,504
  NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RetryRule #配置规则 重试
  ConnectTimeout: 3000  #连接建立的超时时长，默认1秒
  ReadTimeout: 3000 #处理请求的超时时间，默认为1秒
  MaxTotalConnections: 1000  # 最大连接数
  MaxConnectionsPerHost: 1000  # 每个host最大连接数
  restclient:
    enabled: true